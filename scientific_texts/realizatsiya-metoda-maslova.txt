*26*
М.С. Шишмарев, А.Н. Диев, Л.О. Хорошавин, А.Н. Шайкин
Российский химико-технологический университет им. Д.И. Менделеева, Москва, Россия

РЕАЛИЗАЦИЯ МЕТОДА МАСЛОВА
В данной работе описан оператор получения благоприятного набора, который нами
разработан с целью реализации метода Маслова в рамках предложенной нами модели логического вывода. Данная реализация учитывает возможность совместного применения методов Робинсона и Маслова, что дает возможность при подборе эвристик и распараллеливании значительно ускорить процесс вывода.
В рамках программной реализации модели логического вывода нами введен оператор Маслова, реализованный на языке программирования Delphi 7 в виде подключаемого модуля.
Для поиска вывода в исчислении предикатов существует ряд методов, среди которых выделим методы Робинсона [1] и Маслова [2]. В методе Робинсона на каждом шаге поиска вывода преобразуется некоторое множество дизъюнктов, в методе Маслова – множество благоприятных наборов (БН).
Синтезу этих методов посвящена статья [3]. В данной работе опишем предложенный нами оператор получения БН и его программную реализацию.
Для дедуктивного вывода на введенной нами модели [4] выбирается один из квадратов. Для каждого кружка, связанного ребром с данным квадратом, выбираем по одному треугольнику, связанному с упомянутым кружком. Во-первых, такие треугольники можно выбрать, поскольку кружок, не соединенный ни с одним треугольником, свидетельствовал бы о том, что выбранный квадрат соответствует чистому дизъюнкту, а, следовательно, подлежал предварительному удалению вместе с соединенными с ним кружками и инцидентными им ребрами. Во-вторых, проверяем, что к выбранному набору треугольников оператор получения БН еще не применялся. В противном случае заменяем какой-нибудь треугольник другим треугольником, связанным с тем же кружком, так чтобы к выбранному набору треугольников оператор получения БН еще не применялся. Если выбранный набор треугольников является последним для данного квадрата, к которому оператор получения БН еще не применялся, то, после применения к нему оператора, выбранный квадрат удаляется. Также удаляются соединенные с ним кружки, соединенные с теми кружками треугольники и все инцидентные ребра. В-третьих, все кружки, соединенные с выбранными треугольниками, должны иметь допускающие унификацию кортежи переменных, приписанные соединяющим ребрам. При невозможности выбора квадрата с получением описанной унификации, делается заключение о неуспешной попытке вывода. При наличии такой унификации применяем предлагаемый оператор получения БН, а именно, вводим новый треугольник, соединяем с ним все кружки, соединенные с выбранными треугольниками, кроме тех из них, которые соединены с выбранным квадратом.
Если это множество кружков пусто или содержит только кружки, соединенные с квадратами, которым не смежны никакие другие кружки, то вывод успешно завершен. Иначе, ребра, инцидентные новому треугольнику, помечаем кортежами переменных предикатов, соответствующих инцидентным этим ребрам кружкам с учетом унификации.
Для упрощения графа своевременно используем удаление фрагментов графа, избыточных для вывода, по аналогии с тем, как это делалось после применения оператора резольвирования [5], на основании связи между методом резолюций и обратным методом. А именно, настройки программы (кнопка Simplify) позволяют выбирать различные варианты упрощения, в том числе удаление бланковых дизъюнктов, факторизацию и поглощение БН.
Бланковым мы называем дизъюнкт, содержащий только один предикат. Под удалением бланкового дизъюнкта понимается удаление в модели: квадрата, соответствующего бланковому дизъюнкту; ребра, инцидентного этому квадрату; кружка, инцидентного этому ребру; ребер, инцидентных этому кружку. Под факторизацией БН понимается устранение в БН предиката, если благоприятный набор имеет другой предикат, одноименный первому предикату с кортежем переменных, допускающим подстановку, сводящую этот кортеж к кортежу первого предиката. Под поглощением БН мы понимаем его удаление, если для этого БН найдется другой БН такой, что для каждого предиката второго БН в первом БН найдется одноименный предикат с кортежем переменных, к которому при некоторой подстановке можно свести кортеж предиката второго БН.
Предложенный нами оператор получения БН имеет программную реализацию. Для применения этого оператора в поле ввода вводится номер дизъюнкта, которому соответствует строка в таблице StringGrid1. Оператор добавляет (с учетом унификации) в таблицу StringGrid2 сразу все БН, которые можно получить по выбранному дизъюнкту, после чего удаляет ту строку таблицы StringGrid1, по которой он применяется.
На примере 2.23 из книги [6] показано, как работает оператор получения БН (рис. 1). На первом шаге было произведено предварительное удаление бланковых дизъюнктов, на втором – применили оператор по дизъюнкту 2, на третьем – по последнему дизъюнкту 3, после чего получился пустой БН 9 и появилось сообщение (рис. 2) о произведенных для его получения подстановках: X_3 ® a , Y_3 ® b , Y_2 ® b .
Программа пока работает пошагово. На каждом шаге пользователь выбирает применяемый оператор: резольвирования или получения БН. При применении оператора резольвирования пользователь должен указать треугольник, к которому будет применяться оператор. В ходе применения оператора резольвирования происходят описанные выше добавления фрагментов графовой модели и удаляется фрагмент, связанный с использованным треугольником. При применении оператора получения БН пользователь должен указать квадрат, к которому будет применяться оператор. Тогда оператор получения БН будет применен сразу ко всем наборам треугольников, которые можно получить для указанного квадрата описанным выше способом. В ходе применения оператора получения БН происходят описанные выше добавления фрагментов графовой модели и удаляется фрагмент, связанный с использованным квадратом. После выполнения каждого шага осуществляется возможное упрощение графовой модели: удаляются фрагменты графа, соответствующие образовавшимся, возможно, дизъюнктамтавтологиям, чистым и бланковым дизъюнктам, упрощается граф с учетом факторизации и поглощения дизъюнктов и БН. После упрощения программа ожидает от пользователя выбора оператора для следующего шага.
Предложенная модель позволяет одновременно использовать как предложенный оператор получения резольвенты, имитирующий шаги вывода в исчислении резолюций, так и предложенный оператор получения нового БН, имитирующий шаги вывода в исчислении БН, что дает возможность при подборе эвристик и распараллеливании значительно ускорить процесс вывода.
