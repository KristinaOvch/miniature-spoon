*26*
ПРИКЛАДНАЯ ДИСКРЕТНАЯ МАТЕМАТИКА
МАТЕМАТИЧЕСКИЕ ОСНОВЫ
КОМПЬЮТЕРНОЙ БЕЗОПАСНОСТИ

АНАЛИЗ МЕТОДОВ АТРИБУТНОГО РАЗГРАНИЧЕНИЯ ДОСТУПА
 М. Н. Калимолдаев, Р. Г. Бияшев, О. А. Рог
 Институт информационных и вычислительных технологий, г. Алматы, Республика
 Казахстан
 Приведён аналитический обзор основных моделей и методов разграничения доступа, начиная от традиционных (DAC, MAC, RBAC) и до последних разработок — многочисленных моделей, реализующих атрибутное разграничение доступа (ABAC). Описана разрабатываемая в настоящее время модель типизированного атрибутного разграничения доступа (ТАРД). Сформулированы требования к методам разграничения доступа, обеспечивающие безопасное совместное использование информационных ресурсов как в локальных, так и в глобальных вычислительных средах. Проанализированы достоинства и недостатки существующих моделей ABAC. Показано, что модели ТАРД отвечают поставленным требованиям универсальности, гибкости, удобства администрирования, способствующим обеспечению безопасности разграничения доступа вне зависимости от типа операционной среды.
 Ключевые слова: атрибутное разграничение доступа (ABAC), типизированное атрибутное разграничение доступа (ТАРД), DAC, MAC, RBAC, политика разграничения доступа, язык спецификации, синтаксис, семантика, моделирование.
 Введение
 В результате развития новых технологий вычислительные среды эволюционировали от централизованных систем, основанных на механизмах, обеспечивающих их производительность за счёт различных способов параллельного исполнения команд, до распределённых гетерогенных систем, осуществляющих децентрализованное хранение и обработку данных с помощью эффективно взаимодействующих служб и алгоритмов.  На сегодняшний день распределённые вычислительные среды отходят от понятий высокопроизводительных распределённых вычислений в сторону развития виртуального сотрудничества людей и/или организаций, объединённых общими правилами коллективного доступа к определённым вычислительным ресурсам. Методы предоставления доступа к информации становятся сервисно-ориентированными, что позволяет эксплуатировать одни и те же ресурсы в режиме совместного использования и требует обеспечения их защиты путём организации разграничения доступа.
При этом субъекты получают доступ к объектам системы в соответствии с политикой авторизации, определяющей допуск к ресурсам определённых видов согласно предоставленным полномочиям с одновременным запретом различных видов несанкционированного доступа. Актуальность проблемы защиты растёт по мере увеличения объёмов хранимых данных и роста сложности программного обеспечения для их обработки.
Подавляющее большинство приложений снабжаются средствами контроля доступа в той или иной форме. Системы разграничения доступа, будучи важнейшими компонентами систем защиты, наиболее подвержены рискам из-за возможных ошибок в конфигурации политик разграничения доступа.
 1. Недостатки традиционных моделей разграничения доступа и пути их преодоления
 В процессе реализации защищённого доступа к данным система выполняет задачи идентификации, аутентификации и авторизации. Идентификация заключается в присвоении субъекту или объекту идентификатора, ассоциируемого с перечнем разрешённых ему действий. Аутентификация является средством для доказательства права использовать идентификатор, выполнять роль или владеть определёнными атрибутами. На основании результатов операций идентификации и аутентификации осуществляется авторизация как способ выполнения политики посредством предоставления или запрета доступа субъекта к объекту [1].
С начала 1970-х годов было разработано много моделей, основными из которых являются модели дискреционного разграничения доступа DAC (Discretional Access Control), мандатного разграничения доступа MAC (Mandatory Access Control) и ролевого разграничения доступа RBAC (Role Based Access Control) [2 – 4].
Задачи идентификации сущностей в этих моделях выполняются путём присвоения субъектам и объектам уникальных имён, ввиду чего модели называют идентификаторными. Доступ субъекта к объекту осуществляется на основе проверки имён или приписанных им ролей согласно заранее определённым системным политикам.
Идентификаторные модели эффективно работают в замкнутых и относительно неизменных системах, с определённым кругом заранее известных пользователей, имеющих доступ к известным сервисам. Основным недостатком данных моделей является то, что они не учитывают дополнительных параметров разграничения доступа, таких, как сведения о ресурсах, отношения пользователей к ресурсам, динамической информации — времени суток, IP-адресов и т. д., что ведёт к «грубому» разграничению доступа («coarse-grained access control») и служит причиной появления «избыточности прав доступа» у пользователей. Идентификаторные модели не содержат средств администрирования полномочий, оставляя это «третьей стороне» — системному администратору. В широкомасштабных системах управление правами большого числа пользователей и машин становится слишком сложным и подверженным ошибкам. В работе [5], написанной в 1993 г., проанализированы недостатки существующих моделей и сформулированы проблемы, требующие решения при организации разграничения доступа.
Прежде всего необходимо решить вопросы идентификации с целью избавления от избыточных прав доступа путём обеспечения точного наименования сущностей. Следующим недостатком является недостаток гибкости. Единственной политики безопасности, обеспечиваемой традиционными моделями DAC, MAC и RBAC в автономных приложениях, недостаточно для защиты данных в сложных системах, требующих интегрированных политик разграничения доступа для одновременного выполнения различных критериев защиты с целью обеспечения целостности, конфиденциальности и доступности данных. Одновременное выполнение этих условий требуется при защите сложных приложений в области медицины, финансов, резервирования билетов, научных исследований, цифровых библиотек и др.
Отмечается необходимость введения новой парадигмы — «множественной политики», означающей, что в системе должна быть предусмотрена возможность применения разных политик авторизации в зависимости от требований безопасности среды, в которой функционирует система. Для этого необходимо наличие средств конструирования различных политик без реконфигурации самой системы. Как правило, конкретные политики конструируются на основе единого объекта — политики высокого уровня, или метаполитики, реализуемой в виде фреймворка. Необходимо уточнить аспекты понятия множественной политики, касающиеся порядка применения создаваемых на основе метаполитики механизмов разграничения доступа различных видов. 
Одним из путей является поочерёдное применение полученных политик, в результате которого система последовательно меняет применяемый критерий разграничения доступа. Возможность одновременного применения ряда созданных политик для разграничения доступа по различным признакам делает защиту многокритериальной. В последнее время наблюдается значительный рост числа крупномасштабных распределённых открытых систем, являющихся виртуальными организациями, составленными из множества независимых автономных доменов. Ввиду того, что ресурсы и пользователи зачастую располагаются в разных доменах, связи между субъектами и объектами в таких системах становятся более сложными и динамичными. При этом возникает необходимость идентификации сущностей наборами характеристик, а не предопределёнными именами, так как решения о предоставлении доступа должны приниматься с учётом оценки наборов атрибутов субъектов и объектов, делая традиционные идентификаторные модели разграничения доступа неэффективными.
Для гетерогенных сервисов распределённых виртуальных сред необходимы механизмы авторизации, основанные на идентификации наборами признаков, которые обеспечивают необходимую точность, являются адекватными и надёжно защищают от атак [6].
 2. Методы атрибутного разграничения доступа
 Для решения этих проблем был предложен атрибутный метод разграничения доступа (Attribute Based Access Control — ABAC). Его основу составляет безыдентификаторный подход, который заключается в обозначении субъектов и объектов совокупностями атрибутов и позволяет принимать решение по управлению доступом без предварительного знания субъектов или их отношения к поставщику услуг. Наиболее общим определением ABAC является следующее. Атрибутное разграничение доступа — это метод, посредством которого запросы субъекта на выполнение определённых операций над объектом удовлетворяются или отвергаются на основе приписанных им атрибутов, условий среды выполнения и набора политик, сформулированных с учётом этих условий и атрибутов. Атрибутное разграничение доступа является многообещающей альтернативой традиционным моделям. Оно привлекает внимание как академических исследователей, так и создателей промышленных приложений [7 – 9].
Преимущество ABAC состоит в том, что оно позволяет создавать политики доступа на основе атрибутов пользователей и объектов, а не назначать роли, права собственности или метки безопасности вручную системным администратором. Это упрощает администрирование в сложных системах с большим числом пользователей, устраняя необходимость ручного вмешательства при авторизации пользователей для определённых ролей или уровней безопасности, а также создавая возможность автоматизации решения по управлению доступом для удалённых пользователей из других доменов. Система именования сущностей атрибутами обеспечивает точность идентификации и, следовательно, «точное» разграничение доступа (fine-grained access control) в процессе организации защищённого использования ресурсов, не допуская избыточных прав доступа у пользователей. Языки спецификации моделей ABAC дают гибкость и выразительную мощность описаниям политик безопасности. При этом многие из них разрешают моделировать традиционные методы разграничения доступа — DAC, MAC, RBAC.
Модели атрибутного разграничения доступа находят применение в самых разных областях современных вычислений для защиты приложений, баз данных, файловых серверов, в облачных средах и больших данных. За последнее время разработано множество ABAC-моделей, как базовых, так и специализированных [10 – 12]. Их объединяет то, что они могут рассматриваться в качестве основополагающих моделей нового направления защиты, способных решать задачи разграничения доступа, поставленные в [5].
 Типичная ABAC-модель содержит следующие компоненты:
— атрибуты пользователей;
— атрибуты объектов;
— атрибуты контекста или вычислительной среды;
— политики авторизации, основанные на этих атрибутах.
Атрибуты обычно определяются в виде функций, аргументами которых служат субъекты или объекты, а результатом — значения их атрибутов. Политика авторизации предоставляет группам пользователей определённые виды доступа (такие, например, как чтение и запись) к заданным объектам на основе оценки значений их атрибутов. В [13, 14] описываются две техники спецификации политик авторизации. Наиболее распространённой из них считается спецификация, определяющая политики с помощью формул логики, содержащих атрибуты в качестве своих переменных (LAP — Logical-formula Authorization Policy). LAP задаётся с помощью булевых выражений, состоящих из подвыражений, соединённых логическими операторами и операторами отношений. LAP предоставляет доступ субъекта к объекту, если в результате вычисления логическое выражение принимает значение «истина». Примерами моделей LAP-ABAC служат [10, 11, 15, 16]. Гибкость этих моделей продемонстрирована их способностью моделировать традиционные DAC, MAC и RBAC. Альтернативной техникой представления атрибутных политик разграничения доступа является перечисление. Примерами этой категории служат Policy Machine (PM) [17] и 2-sorted-RBAC [18].
Неформально перечислимая политика авторизации (Enumerated Authorization Policy, EAP) определяется как множество кортежей (uai, OP, oai), где uai и oai — значения атрибутов пользователя и объекта соответственно; OP — множество операций, доступных пользователю. В EAP кортежи различны и независимы, а значения атрибутов могут быть как атомарными, так и в виде множеств.
Полезность перечислимых политик авторизации продемонстрирована на многих примерах. Так, в Policy Machine [17] определены перечислимые атрибутные политики с использованием одного атрибута пользователя, одного атрибута объекта и набора возможных действий. Простая структура политики перечисления не делает её менее выразительной. Показано, что посредством PM могут быть сконфигурированы политики MAC и RBAC.
Преимущество логического подхода для представления атрибутных политик разграничения доступа в виде формул логики заключается в его простоте и лёгкости использования. Создание новых правил авторизации не представляет трудностей, так как не включает дополнительных расходов, требуемых, например, для инжиниринга ролей в RBAC. Эти правила способны гибко и в сжатой форме описывать даже сложные политики. Не существует ограничений на количество используемых в них атрибутов и сложность языка описания правил [7]. С другой стороны, создание выразительных вычислительных языков для спецификации атрибутных правил разграничения доступа делает задачи вычисления значений разнородных атрибутов в процессе конструирования и выполнения политик NP-полными или даже неразрешимыми, что служит, вместе с отсутствием формальных определений моделей и сложностью администрирования, главным препятствием широкому применению метода ABAC.
Относительно политик перечисления, разработка которых начата сравнительно недавно, сделано предположение о полиномиальном времени, требуемом для оценки атрибутов.
 3. Виды моделей ABAC
 В [6, 9, 13] приводятся описания многочисленных моделей атрибутного разграничения доступа, разработанных за последнее время. Их можно разделить на две категории — модели общего назначения и специализированные, предназначенные для применения в определённых вычислительных средах, таких, как облачные вычисления, веб-сервисы и т. д.
 Примерами моделей общего назначения служат:
— логический фреймворк для ABAC (A Logic-Based Framework for Attribute-Based Access Control) — модель в форме фреймворка, основанного на логическом про граммировании, в которой политики определяются в виде логических программ, а атрибуты и операции — как объекты теории перечислимых множеств;
— атрибутная матрица доступа (Attribute-Based Access Matrix Model, ABAM). В ней строки представляют собой пары, состоящие из субъектов и множеств их атрибутов, а столбы содержат пары объектов и их атрибутов. Клетка матрицы содержит множество прав доступа субъекта к объекту в соответствии с принятой политикой безопасности;
— модель Rubio-Medrano, отображающая атрибуты сущностей в маркеры безопасности, соотнесённые с привилегиями, путём обхода графа маркеров, определяемого администратором. В результате обхода осуществляется принятие/отказ решения о доступе;
— ABAC-alpha — ещё одна недавно созданная модель (2012), предназначенная специально для моделирования DAC, MAC и RBAC. Для этого даётся формальное определение основных элементов ABAC (пользователей, объектов, политик и т. д.), их отношений и ограничений, позволяющее эмулировать традиционные модели;
— модель Policy Machine предлагает инновационный подход к разграничению доступа. Она предоставляет архитектуру и фреймворк для спецификации и реализации обобщённых атрибутных политик разграничения доступа, составляющие унифицированный механизм для реализации широкого круга различных политик;
— модель атрибутного разграничения доступа на основе иерархических групп (Hierarchical Group and Attribute-Based Access Control — HGABAC) создает обобщённую модель ABAC с иерархическим представлением групп атрибутов субъектов и объектов.
 К числу специализированных моделей ABAC относятся следующие: модель CA-ABAC, предназначенная для организации разграничения доступа в облаках; T-ABAC, применяемая в системах реального времени; MPABAC — в объединённых рабочих и образовательных средах. Специальные модели разработаны для сред мобильных приложений, грид-вычислений, веб-сервисов, цифровых библиотек и т. д.
 В [9] приводится анализ этих моделей и делается вывод о том, что большинство из них ориентировано на специфические условия использования и не отвечают требованиям, обеспечивающим универсальность, удобство администрирования и гибкость управления безопасностью.
 Для выполнения данных требований модели должны обладать следующими характеристиками:
— иметь формальное определение;
— содержать средства администрирования;
— обеспечивать возможность применения множественных политик и включать способы их конструирования;
— язык описания модели должен быть высокоуровневым, т. е. не зависеть от операционной среды.
 4. Задача спецификации моделей ABAC
 Типичный механизм разграничения доступа содержит данные, описывающие политики разграничения доступа и атрибуты, а также набор функций для приёма и обработки запросов на доступ согласно этим политикам. Реализация разграничения доступа осуществляется по-разному в различных операционных средах. Особенности распределённых гетерогенных сред ставят дополнительные задачи, требующие учитывать круг контролируемых объектов (пользователей и ресурсов), различные типы операций (такие, например, как чтение, пересылка, одобрение, выбор), а также типы данных (записи, файлы, сообщения, рабочие заметки). Администраторы вынуждены принимать во внимание наличие разных доменов безопасности, управляемых различными политиками на основании характерных атрибутов.
Необходимость осуществления глобального контроля безопасности ставит задачу разработки высокоуровневых средств, позволяющих конструировать различные политики на основе метаполитики как единого высокоуровневого объекта, с помощью соответствующих средств администрирования, которые не зависели бы от операционной среды.
В настоящее время разработан ряд языков спецификации политик авторизации и основанных на них систем разграничения доступа. К их числу относятся XACML, NGAC, Ponder, Akenti, dRBAC и др. [19, 20]. Многие из рассмотренных моделей ABAC используют собственные встроенные языки описания политик или вовсе не имеют языков. В работах [21 – 30] приводится описание различных аспектов, а также формальное представление модели разрабатываемого метода типизированного атрибутного разграничения доступа (ТАРД). В данной работе кратко рассмотрены общие положения ТАРД, даны определения его модели на нескольких уровнях, описан порядок функционирования основанных на ней систем.
Модель ТАРД принадлежит классу моделей ABAC, но, в отличие от ABAC, атрибутам безопасности сущностей ТАРД приписаны определённые типы. Решение о возможности доступа принимается на основе обработки однотипных атрибутов пары субъект — объект. Данная модель может быть отнесена к разряду моделей разграничения доступа общего назначения, основанной на логических формулах (LAP-ABAC). В её состав входят:
— средства определения возможности доступа субъектов к объектам в соответствии с их полномочиями;
— средства двухступенчатого администрирования — для конструирования политик авторизации и для управления идентификацией сущностей в процессе разграничения доступа.
В соответствии с определением типа атрибутов T модель ТАРД имеет многоуровневое представление, которое делает её инструментом конструирования механизмов разграничения доступа в виде типов, моделирующих различные политики безопасности, включая DAC, MAC и RBAC. Создаваемые политики могут применяться как по очереди, так и одновременно, что обеспечивает выполнение всех аспектов парадигмы «множественной политики».
Идентификация сущности ТАРД осуществляется путём присвоения ей метки безопасности в виде значения определённого типа или множественной метки безопасности в виде ряда значений различных типов. Тип T определяется как математический объект, содержащий домен типа — конечное множество всевозможных значений атрибутов в виде полного частично упорядоченного множества, структурированного отношением предшествования, и определённых на нем операций типизации Type, представленных непрерывными монотонными функциями, а также операцией доступа Acc [21, 23, 27, 28]. Операция типизации присваивает сущности e метку безопасности T: T (e) = Type(e).

Множественная метка безопасности в виде кортежа T1 (e), . . ., TK (e) присваивается в результате применения нескольких операций типизации типов T1, . . ., TK. Предикат Acc осуществляет сравнение меток безопасности типа T субъекта и объекта, разрешая/отвергая возможность доступа. Истинностное значение означает разрешение на доступ субъекту s к объекту o:
 Acc(T (s), T (o)) = true/false.
Набор операций типа T образует механизм разграничения доступа, а также служит средством реализации политики типизированного атрибутного разграничения доступа P (T), задаваемой типом T [23]. Спецификация политики безопасности P (T) задаётся конкретным видом структуры и значениями узлов домена типа T, а также соответствующими этой структуре операциями. Тип T служит ограничением на значения атрибутов и круг операций с атрибутами данного типа. Данное обстоятельство лежит в основе принципа безопасности моделей ТАРД [26].
Метод ТАРД имеет многоуровневое определение в виде метауровня META, объектного уровня OBJ и уровня матрицы доступа AM. В соответствии с этим даётся многоуровневое определение типа T. На уровне META тип представлен метатипом TMETA, являющимся обобщённым представлением политики PMETA (T). Он служит для порождения политик типизированного атрибутного разграничения доступа объектного уровня POBJ (T).
Типы объектного уровня TOBJ представляют собой ряд конкретных политик разграничения доступа POBJ (T), получаемых из метаполитики PMETA (T). При этом TOBJ является интенсиональным представлением типа T. Тип TAM уровня AM — это реализация политики типизированного атрибутного разграничения доступа POBJ (T) в виде множества типизированных переменных, образующих матрицу доступа и являющихся экстенсиональным представлением типа T.
Построена модель M (T), которая является формальным представлением типа T. Она предназначена для конструирования и представления предметной области ТАРД на этапах работы системы разграничения доступа. Модель, так же как и тип, имеет многоуровневое определение. Переход на следующий уровень производится путём моделирования семантики предыдущего уровня в процессе функционирования системы разграничения доступа.
Уровень метамодели MMETA (T) представляет метатип TMETA и играет роль фреймворка, или инструмента для создания конкретных моделей ТАРД. Объектная модель MOBJ (T) — это объектный тип TOBJ, который является средством реализации конкретной политики безопасности типа T, полученной из метатипа TMETA.
Матрица доступа MAM (T) — сложноструктурированная область типизированных значений атрибутов в виде меток безопасности сущностей, содержит результаты выполнения политики безопасности P (T) в процессе функционирования модели MOBJ (T). В процессе работы на разных уровнях модель выполняет различные функции. На уровне META осуществляется конструирование семантических значений типа TOBJ специальной операцией интерпретации I, которое заключается в определении вида структуры домена типа TOBJ как подструктуры домена типа TMETA и присвоении значений его элементам. В результате создаются различные виды моделей MOBJ (T), предназначенные для выполнения соответствующих политик разграничения доступа POBJ (T): MMETA (T, I)> MOBJ (T). Формирование матрицы доступа осуществляется операциями Type сконструированных моделей MOBJ (T). При этом производится присвоение полномочий сущностям в виде их меток безопасности: MOBJ (T, Type(e))> MAM (T).
На уровне AM производится обработка создаваемой матрицы доступа путём выдачи разрешения на доступ согласно критерию, задаваемому типом TOBJ, в результате выполнения операции доступа Acc модели MOBJ (T): MOBJ (T, Acc (T (s), T (o))> {true, false}. Модели MOBJ (T) могут выполняться как последовательно, так и параллельно, реализуя все аспекты множественной политики. Обозначим MOBJ (T) = MOBJ (Ti) и рассмотрим множество различных моделей {MOBJ (Ti): i = 1, . . ., K}, где типы Ti семантически независимы. Одновременное использование этих моделей в рамках одной системы обеспечивает разграничение доступа по ряду критериев, определяемых политиками T1, . . ., TK. Предикат M MAM (T1, . . ., TK) предоставляет доступ субъекту s к объекту o при условии одновременного выполнения критериев T1, . . ., TK: M MAM (T1, . . ., TK) = MAM (T1, Acc1)? . . . ? MAM (TK, AccK). (1)
Построено формальное представление модели ТАРД, определяемое на уровнях META, OBJ и AM в виде языковых спецификаций T AS и T LS, взаимосвязь которых обусловливает её функционирование [27, 28]. В работе [27] приводится представление типа атрибутов в виде алгебраической системы, в [28] содержится обзор возможностей применения логики для разграничения доступа, используемых в настоящее время, а также описание языка T LS для представления типа атрибутов ТАРД в виде логики. Модель ТАРД представима в виде пары M (T) = (T AS , T LS ), где T AS = (D, ?) — многоуровневое определение многосортной алгебраической системы, состоящей из домена D и сигнатуры ? операций типа T , служащей для представления состояния каждого уровня модели: T AS = (TMETA AS AS, TOBJ AS, TAM ); T LS — многосортная логическая система, включающая язык L с алфавитом, представленным доменом D и правилами грамматики — операциями типа T , а также аксиомами Ax и правилами вывода Inf : T LS = (L, Ax, Inf ).
Функционирование многоуровневой модели ТАРД заключается в моделировании семантики следующего уровня путём интерпретации модели, представляющей предыдущий уровень. При этом T LS, представленная в виде тройки (TMETA LS LS, TOBJ LS, TAM), образует систему семантического моделирования. Ввиду того, что определение T LS включает функции интерпретации, схему взаимодействия спецификаций модели ТАРД можно представить следующим образом: LS AS AS Метауровень META: TMETA (TMETA)> TOBJ.
 LS AS AS Объектный уровень OBJ: TOBJ (TOBJ)> TAM.
 LS AS Уровень матрицы доступа AM: TAM (TAM)> {true, false}.
 В целях реализации модели ТАРД для каждого её уровня даётся формальное определение системы типизированного атрибутного разграничения доступа как программы (или программной системы) S(T), построенной на основе модели M (T). Она обеспечивает разграничение доступа в соответствии с политикой, представленной типом T [29]. Программа S является общим представлением функции семантического моделирования состояний предметной области ТАРД. Многокритериальное разграничение доступа осуществляется программой S, построенной на основе моделей M (T1), . . ., M (TK) согласно формуле (1).
Архитектура системы ТАРД состоит из модуля настройки и модуля выполнения, соответствующих мета- и объектным уровням определения модели ТАРД. Модуль настройки (Администратор 1) осуществляет конфигурирование системы путём задания одного типа T или нескольких типов T1, . . ., TK атрибутов (которое заключается в задании их структуры и определении значений элементов доменов), служащих критериями разграничения доступа. Критерий или набор критериев, обеспечиваемых сконструированными типами, должен отвечать требованиям защиты данной информационной системы. Модуль выполнения осуществляет две функции — функцию администрирования (Администратор 2), которая присваивает сущностям (субъектам и объектам) значение типа T (e) или кортежи значений типов (T1 (e), . . ., TK (e)) в качестве их меток безопасности, и функцию разграничения, которая обеспечивает доступ субъектов к объектам на основе сравнения меток безопасности одинаковых типов. Необходимо отметить, что выразительность метода ТАРД несколько ограничена по сравнению с общепринятыми ABAC-методами.
 Описанная модель ТАРД обладает следующими характеристиками:
— принцип обработки однотипных атрибутов является предпосылкой обеспечения скорости вычислений их значений;
— модель имеет возможность формально доказывать правильность решений о предо ставлении доступа, используя дедуктивный аппарат логической спецификации;
— обеспечивает наглядность и контроль процесса администрирования;
— способна динамически конструировать новые модели разграничения доступа вместе с возможностью моделировать традиционные DAC, MAC, RBAC и применять их в системе как одну за другой, так и одновременно;
— модель непосредственно реализуема на языках функционального и логического  программирования с использованием аппарата программирования в ограничениях.
Перечисленные особенности позволяют использовать системы типизированного атрибутного разграничения доступа в качестве центров управления политиками безопасности, создаваемых в локальных и глобальных вычислительных средах. На основе этих центров, рассматриваемых в качестве виртуальных организаций, могут создаваться домены администрирования, поддающиеся локализации и обеспечивающие в силу этого полную защиту информации на контролируемых ими участках распределённых гетерогенных вычислительных сред [30].
 Заключение
 Рассмотрены основные методы разграничения доступа в их развитии — от традиционных моделей DAC, MAC и RBAC до последних разработок — моделей, основанных на методе атрибутного разграничения доступа ABAC. Приведён перечень недостатков традиционных моделей и пути их преодоления. Сформулированы требования, обеспечивающие гибкость управления безопасностью, универсальность и удобство администрирования, которым должны отвечать модели разграничения доступа, функционирующие как в локальных, так и в распределённых гетерогенных средах. Перечислены основные разработанные к настоящему времени модели атрибутного разграничения доступа, отмечены их достоинства и недостатки. Описана модель типизированного атрибутного разграничения доступа, показано, что она отвечает основным требованиям построения моделей, обеспечивающим безопасное пользование разделяемыми ресурсами.
